# Docker-specific configuration
server.port=8080

# Database configuration
spring.datasource.url=jdbc:postgresql://postgres:5432/vibecodingdemo
spring.datasource.username=vibeuser
spring.datasource.password=vibepass
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA configuration - Optimized for performance
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false
# Enable batch processing for better performance
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
# Disable second-level cache (using Spring Cache instead)
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false

# Cache configuration for better performance
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=1000,expireAfterWrite=5m

# Kafka configuration
spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.consumer.group-id=vibe-coding-demo
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Optimized logging for production
logging.level.com.vibecodingdemo=INFO
logging.level.org.springframework.kafka=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN 