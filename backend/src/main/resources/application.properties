spring.application.name=backend

# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/vibecodingdemo
spring.datasource.username=vibeuser
spring.datasource.password=vibepass
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Logging Configuration
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.com.vibecodingdemo.backend=INFO
logging.level.org.springframework.security=INFO
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG

# Structured logging configuration
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level [%X{requestId:-}] [%X{userId:-}] %logger{36} - %msg%n
logging.file.path=./logs
logging.file.name=vibe-coding-demo.log
logging.logback.rollingpolicy.max-file-size=100MB
logging.logback.rollingpolicy.max-history=30

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.endpoint.health.show-components=always
management.health.defaults.enabled=true
management.health.db.enabled=true
management.health.diskspace.enabled=true

# Custom health indicators
management.health.custom.enabled=true

# Metrics Configuration
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles.http.server.requests=0.5,0.9,0.95,0.99
management.metrics.tags.application=vibe-coding-demo
management.metrics.tags.environment=${spring.profiles.active:dev}

# Info endpoint configuration
management.info.env.enabled=true
management.info.java.enabled=true
management.info.os.enabled=true

# Application info
info.app.name=@project.name@
info.app.description=Vibe Coding Demo Backend
info.app.version=@project.version@
info.app.encoding=@project.build.sourceEncoding@
info.app.java.version=@java.version@

# Kafka Configuration
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.consumer.group-id=vibe-coding-demo
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Telegram Bot Configuration
telegram.bot.token=${TELEGRAM_BOT_TOKEN:your-bot-token-here}
telegram.bot.username=${TELEGRAM_BOT_USERNAME:your-bot-username-here}

# JWT Configuration
jwt.secret=${JWT_SECRET:}
jwt.expiration=${JWT_EXPIRATION:3600000}
jwt.refresh-expiration=${JWT_REFRESH_EXPIRATION:604800000}

# Security Configuration
security.require-ssl=${SECURITY_REQUIRE_SSL:false}
security.session.timeout=${SECURITY_SESSION_TIMEOUT:1800}

# CORS Configuration
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:5173}
cors.allowed-methods=${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS,PATCH}
cors.max-age=${CORS_MAX_AGE:3600}
